bits 32
global main

boolNot:        ;0 -> 0xffffffff.   1, 830, 555 -> 0. implicit normalization.
test eax, eax
jnz zero
xor eax, eax
not eax
ret
zero:
xor eax, eax
ret

boolNormalize:  ;0 -> 0.            1, 830, 555 -> 0xffffffff.
test eax, eax
jnz notzero
xor eax, eax
ret
notzero:
xor eax, eax
not eax
ret

get_eip:
    mov eax, [esp]
    ret
section .text
extern printf
extern putchar



; ** generated by the ene compiler v3.1 
; ** build on Apr 20 2016 10:59:51


main:	;start of function main
push ebp
mov ebp, esp

sub esp, 4
push __str_1
call printf
add esp, 4
push 10
call putchar
add esp, 4
__for_1__start_:
lea edx, [ebp -4]
push edx
push 0
pop  eax
pop  ecx
xor edx, edx
mov edx, eax
mov dword [ecx], edx
__for_1__ckeck_:
lea edx, [ebp -4]
push edx
pop  ecx
xor eax, eax
mov  eax, dword [ecx]
push eax
push 10
pop  eax
pop  ecx
cmp ecx, eax
jl __sml_1.ok
jmp __sml_1.fail
__sml_1.ok:
xor eax, eax
not eax
jmp __sml_1.end
__sml_1.fail:
xor eax, eax
__sml_1.end:
push eax
pop  eax
test eax, -1
jnz __for_1__code_
jmp __for_1__end_
__for_1__code_:
lea edx, [ebp -4]
push edx
pop  ecx
xor eax, eax
mov  eax, dword [ecx]
push eax
pop  eax
push eax
push eax
pop  eax
pop  ecx
mul ecx
push eax
lea edx, [ebp -4]
push edx
pop  ecx
xor eax, eax
mov  eax, dword [ecx]
push eax
push __str_2
call printf
add esp, 4
add esp, 4
add esp, 4
push 10
call putchar
add esp, 4
lea edx, [ebp -4]
push edx
pop  eax
push eax
push eax
pop  ecx
xor eax, eax
mov  eax, dword [ecx]
push eax
push 1
pop  eax
pop  ecx
add eax, ecx
push eax
pop  eax
pop  ecx
xor edx, edx
mov edx, eax
mov dword [ecx], edx
jmp __for_1__ckeck_
__break_1:
__for_1__end_:
push 10
call putchar
add esp, 4
end_main:	;end of function main
add esp, 4

mov esp, ebp
pop ebp
ret 

section .data
__str_1: db "Ene runs on sxlb, YEE", 0
__str_2: db "i = %u  i*i = %u", 0

section .bss
